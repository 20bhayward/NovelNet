{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Hayward\\\\NovelNet\\\\src\\\\components\\\\Novel\\\\NovelList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchNovels } from '../../services/api';\nimport NovelItem from './NovelItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovelList = () => {\n  _s();\n  const [novels, setNovels] = useState([]);\n  useEffect(() => {\n    const getNovels = async () => {\n      const novelsData = await fetchNovels();\n      setNovels(novelsData);\n    };\n    getNovels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: novels.map(novel => /*#__PURE__*/_jsxDEV(NovelItem, {\n      novel: novel\n    }, novel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(NovelList, \"yUrI7DyTjt5fYJiAEED1fc0SQEU=\");\n_c = NovelList;\nexport default NovelList;\nvar _c;\n$RefreshReg$(_c, \"NovelList\");","map":{"version":3,"names":["React","useEffect","useState","fetchNovels","NovelItem","jsxDEV","_jsxDEV","NovelList","_s","novels","setNovels","getNovels","novelsData","children","map","novel","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brian Hayward/NovelNet/src/components/Novel/NovelList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchNovels } from '../../services/api';\r\nimport NovelItem from './NovelItem';\r\n\r\nconst NovelList = () => {\r\n  const [novels, setNovels] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getNovels = async () => {\r\n      const novelsData = await fetchNovels();\r\n      setNovels(novelsData);\r\n    };\r\n\r\n    getNovels();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {novels.map((novel:any) => (\r\n        <NovelItem key={novel.id} novel={novel} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovelList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,UAAU,GAAG,MAAMT,WAAW,CAAC,CAAC;MACtCO,SAAS,CAACE,UAAU,CAAC;IACvB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAO,QAAA,EACGJ,MAAM,CAACK,GAAG,CAAEC,KAAS,iBACpBT,OAAA,CAACF,SAAS;MAAgBW,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,SAAS;AAAAc,EAAA,GAATd,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}