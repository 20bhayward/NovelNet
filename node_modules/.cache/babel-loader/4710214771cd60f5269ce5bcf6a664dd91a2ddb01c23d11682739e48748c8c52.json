{"ast":null,"code":"import axios from 'axios';\nconst apiBaseURL = 'https://consumet-api-z0sh.onrender.com'; // Replace with the actual URL of novel-api\n\nexport const fetchNovels = async () => {\n  try {\n    const response = await axios.get(`${apiBaseURL}/novels`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching novels:', error);\n    return [];\n  }\n};\nexport const fetchNovelDetails = async novelId => {\n  try {\n    const response = await axios.get(`${apiBaseURL}/novels/${novelId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching novel details:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","apiBaseURL","fetchNovels","response","get","data","error","console","fetchNovelDetails","novelId"],"sources":["C:/Users/Brian Hayward/NovelNet/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiBaseURL = 'https://consumet-api-z0sh.onrender.com'; // Replace with the actual URL of novel-api\r\n\r\nexport const fetchNovels = async () => {\r\n  try {\r\n    const response = await axios.get(`${apiBaseURL}/novels`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching novels:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchNovelDetails = async (novelId: any) => {\r\n  try {\r\n    const response = await axios.get(`${apiBaseURL}/novels/${novelId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching novel details:', error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,wCAAwC,CAAC,CAAC;;AAE7D,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,UAAW,SAAQ,CAAC;IACxD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOC,OAAY,IAAK;EACvD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,UAAW,WAAUQ,OAAQ,EAAC,CAAC;IACnE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}