{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Hayward\\\\NovelNet\\\\src\\\\pages\\\\Search\\\\Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const searchQuery = new URLSearchParams(location.search).get('q');\n    if (searchQuery) {\n      fetchSearchResults(searchQuery);\n    }\n  }, [location.search]);\n  const fetchSearchResults = async query => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`https://api.consumet.org/meta/anilist-manga/${encodeURIComponent(query)}`);\n      const results = response.data.results.map(result => ({\n        id: result.id,\n        title: result.title.userPreferred,\n        altTitles: [result.title.romaji, result.title.english, result.title.native].filter(Boolean),\n        image: result.image,\n        description: result.description || '',\n        genres: result.genres,\n        status: result.status,\n        rating: result.rating\n      }));\n      setSearchResults(results);\n    } catch (error) {\n      setError('An error occurred while fetching search results.');\n      console.error('Error fetching search results:', error);\n    }\n    setIsLoading(false);\n  };\n  const handleViewDetails = id => {\n    navigate(`/manga/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: result.image,\n            alt: result.title.userPreferred,\n            style: {\n              height: '300px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: result.title.userPreferred\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: result.description ? result.description.slice(0, 100) + '...' : 'No description available.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Rating: \", result.rating || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Genres: \", result.genres.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleViewDetails(result.id),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No search results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"pFSKvGHYYmIEgAdw6ZRYMx+mbXs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","Container","Row","Col","Card","Button","axios","jsxDEV","_jsxDEV","Search","_s","location","navigate","searchResults","setSearchResults","isLoading","setIsLoading","error","setError","searchQuery","URLSearchParams","search","get","fetchSearchResults","query","response","encodeURIComponent","results","data","map","result","id","title","userPreferred","altTitles","romaji","english","native","filter","Boolean","image","description","genres","status","rating","console","handleViewDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","length","md","className","Img","variant","src","alt","style","height","objectFit","Body","Title","Text","slice","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brian Hayward/NovelNet/src/pages/Search/Search.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Button, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\ninterface SearchResult {\r\n  id: string;\r\n  title: {\r\n    romaji: string;\r\n    english: string | null;\r\n    native: string;\r\n    userPreferred: string;\r\n  };\r\n  image: string;\r\n  description: string | null;\r\n  rating: number | null;\r\n  genres: string[];\r\n}\r\n\r\nconst Search: React.FC = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const searchQuery = new URLSearchParams(location.search).get('q');\r\n    if (searchQuery) {\r\n      fetchSearchResults(searchQuery);\r\n    }\r\n  }, [location.search]);\r\n\r\n  const fetchSearchResults = async (query: string) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n  \r\n    try {\r\n      const response: { data: { results: any[] } } = await axios.get(\r\n        `https://api.consumet.org/meta/anilist-manga/${encodeURIComponent(query)}`\r\n      );\r\n  \r\n      const results: SearchResult[] = response.data.results.map((result: any) => ({\r\n        id: result.id,\r\n        title: result.title.userPreferred,\r\n        altTitles: [\r\n          result.title.romaji,\r\n          result.title.english,\r\n          result.title.native,\r\n        ].filter(Boolean),\r\n        image: result.image,\r\n        description: result.description || '',\r\n        genres: result.genres,\r\n        status: result.status,\r\n        rating: result.rating,\r\n      }));\r\n  \r\n      setSearchResults(results);\r\n    } catch (error) {\r\n      setError('An error occurred while fetching search results.');\r\n      console.error('Error fetching search results:', error);\r\n    }\r\n  \r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleViewDetails = (id: string) => {\r\n    navigate(`/manga/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Search Results</h1>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : searchResults.length > 0 ? (\r\n        <Row>\r\n          {searchResults.map((result) => (\r\n            <Col md={4} key={result.id}>\r\n              <Card className=\"mb-4\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={result.image}\r\n                  alt={result.title.userPreferred}\r\n                  style={{ height: '300px', objectFit: 'cover' }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>{result.title.userPreferred}</Card.Title>\r\n                  <Card.Text>\r\n                    {result.description ? result.description.slice(0, 100) + '...' : 'No description available.'}\r\n                  </Card.Text>\r\n                  <Card.Text>Rating: {result.rating || 'N/A'}</Card.Text>\r\n                  <Card.Text>Genres: {result.genres.join(', ')}</Card.Text>\r\n                  <Button variant=\"primary\" onClick={() => handleViewDetails(result.id)}>\r\n                    View Details\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <p>No search results found.</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}