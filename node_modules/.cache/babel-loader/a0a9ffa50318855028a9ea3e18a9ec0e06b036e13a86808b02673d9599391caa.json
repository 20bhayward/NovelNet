{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Hayward\\\\NovelNet\\\\src\\\\components\\\\SearchBar\\\\SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n  const handleSearch = () => {\n    if (searchTerm.trim()) {\n      navigate(`/search?q=${encodeURIComponent(searchTerm.trim())}`);\n    }\n  };\n  const handleInputChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-container d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSearch,\n        className: \"search-icon\",\n        onClick: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"wjbP4zVEBL8ya0shEuwo30QWfMs=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useNavigate","FontAwesomeIcon","faSearch","jsxDEV","_jsxDEV","SearchBar","_s","searchTerm","setSearchTerm","navigate","handleSearch","trim","encodeURIComponent","handleInputChange","e","target","value","handleKeyDown","key","className","children","type","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brian Hayward/NovelNet/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar: React.FC = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (searchTerm.trim()) {\r\n      navigate(`/search?q=${encodeURIComponent(searchTerm.trim())}`);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className=\"search-input-container d-flex align-items-center\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input\"\r\n          value={searchTerm}\r\n          onChange={handleInputChange}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faSearch}\r\n          className=\"search-icon\"\r\n          onClick={handleSearch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIH,UAAU,CAACI,IAAI,CAAC,CAAC,EAAE;MACrBF,QAAQ,CAAE,aAAYG,kBAAkB,CAACL,UAAU,CAACI,IAAI,CAAC,CAAC,CAAE,EAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAsC,IAAK;IACpEN,aAAa,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,aAAa,GAAIH,CAAwC,IAAK;IAClE,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBR,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBhB,OAAA;MAAKe,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DhB,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,QAAQ;QACpBH,SAAS,EAAC,cAAc;QACxBH,KAAK,EAAET,UAAW;QAClBgB,QAAQ,EAAEV,iBAAkB;QAC5BW,SAAS,EAAEP;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFxB,OAAA,CAACH,eAAe;QACd4B,IAAI,EAAE3B,QAAS;QACfiB,SAAS,EAAC,aAAa;QACvBW,OAAO,EAAEpB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvCID,SAAmB;EAAA,QAENL,WAAW;AAAA;AAAA+B,EAAA,GAFxB1B,SAAmB;AAyCzB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}