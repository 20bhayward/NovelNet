{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Hayward\\\\NovelNet\\\\src\\\\pages\\\\Search\\\\Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const searchQuery = new URLSearchParams(location.search).get('q');\n    if (searchQuery) {\n      fetchSearchResults(searchQuery);\n    }\n  }, [location.search]);\n  const fetchSearchResults = async query => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`https://graphql.anilist.co`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        data: {\n          query: `\n            query ($search: String) {\n              manga: Page(perPage: 20) {\n                media(search: $search, type: MANGA) {\n                  id\n                  title {\n                    romaji\n                    english\n                    native\n                    userPreferred\n                  }\n                  coverImage {\n                    extraLarge\n                  }\n                  description\n                  averageScore\n                  genres\n                }\n              }\n            }\n          `,\n          variables: {\n            search: query\n          }\n        }\n      });\n      const results = response.data.data.manga.media.map(result => ({\n        id: result.id,\n        title: {\n          romaji: result.title.romaji,\n          english: result.title.english,\n          native: result.title.native,\n          userPreferred: result.title.userPreferred\n        },\n        image: result.coverImage.extraLarge,\n        description: result.description,\n        rating: result.averageScore,\n        genres: result.genres\n      }));\n      setSearchResults(results);\n    } catch (error) {\n      setError('An error occurred while fetching search results.');\n    }\n    setIsLoading(false);\n  };\n  const handleViewDetails = id => {\n    navigate(`/manga/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: result.image,\n            alt: result.title.userPreferred,\n            style: {\n              height: '300px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: result.title.userPreferred\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: result.description ? result.description.slice(0, 100) + '...' : 'No description available.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Rating: \", result.rating || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Genres: \", result.genres.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleViewDetails(result.id),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No search results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"pFSKvGHYYmIEgAdw6ZRYMx+mbXs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","Container","Row","Col","Card","Button","axios","jsxDEV","_jsxDEV","Search","_s","location","navigate","searchResults","setSearchResults","isLoading","setIsLoading","error","setError","searchQuery","URLSearchParams","search","get","fetchSearchResults","query","response","method","headers","data","variables","results","manga","media","map","result","id","title","romaji","english","native","userPreferred","image","coverImage","extraLarge","description","rating","averageScore","genres","handleViewDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","length","md","className","Img","variant","src","alt","style","height","objectFit","Body","Title","Text","slice","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brian Hayward/NovelNet/src/pages/Search/Search.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Button, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\ninterface SearchResult {\r\n  id: string;\r\n  title: {\r\n    romaji: string;\r\n    english: string | null;\r\n    native: string;\r\n    userPreferred: string;\r\n  };\r\n  image: string;\r\n  description: string | null;\r\n  rating: number | null;\r\n  genres: string[];\r\n}\r\n\r\nconst Search: React.FC = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const searchQuery = new URLSearchParams(location.search).get('q');\r\n    if (searchQuery) {\r\n      fetchSearchResults(searchQuery);\r\n    }\r\n  }, [location.search]);\r\n\r\n  const fetchSearchResults = async (query: string) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.get(`https://graphql.anilist.co`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        },\r\n        data: {\r\n          query: `\r\n            query ($search: String) {\r\n              manga: Page(perPage: 20) {\r\n                media(search: $search, type: MANGA) {\r\n                  id\r\n                  title {\r\n                    romaji\r\n                    english\r\n                    native\r\n                    userPreferred\r\n                  }\r\n                  coverImage {\r\n                    extraLarge\r\n                  }\r\n                  description\r\n                  averageScore\r\n                  genres\r\n                }\r\n              }\r\n            }\r\n          `,\r\n          variables: {\r\n            search: query,\r\n          },\r\n        },\r\n      });\r\n\r\n      const results = response.data.data.manga.media.map((result: any) => ({\r\n        id: result.id,\r\n        title: {\r\n          romaji: result.title.romaji,\r\n          english: result.title.english,\r\n          native: result.title.native,\r\n          userPreferred: result.title.userPreferred,\r\n        },\r\n        image: result.coverImage.extraLarge,\r\n        description: result.description,\r\n        rating: result.averageScore,\r\n        genres: result.genres,\r\n      }));\r\n\r\n      setSearchResults(results);\r\n    } catch (error) {\r\n      setError('An error occurred while fetching search results.');\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleViewDetails = (id: string) => {\r\n    navigate(`/manga/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Search Results</h1>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : searchResults.length > 0 ? (\r\n        <Row>\r\n          {searchResults.map((result) => (\r\n            <Col md={4} key={result.id}>\r\n              <Card className=\"mb-4\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={result.image}\r\n                  alt={result.title.userPreferred}\r\n                  style={{ height: '300px', objectFit: 'cover' }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>{result.title.userPreferred}</Card.Title>\r\n                  <Card.Text>\r\n                    {result.description ? result.description.slice(0, 100) + '...' : 'No description available.'}\r\n                  </Card.Text>\r\n                  <Card.Text>Rating: {result.rating || 'N/A'}</Card.Text>\r\n                  <Card.Text>Genres: {result.genres.join(', ')}</Card.Text>\r\n                  <Button variant=\"primary\" onClick={() => handleViewDetails(result.id)}>\r\n                    View Details\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <p>No search results found.</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}